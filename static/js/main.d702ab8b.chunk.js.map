{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.styled.js","components/Section/Section.js","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.js","utils/Feedback.js","components/Notification/Notification.styled.js","components/Notification/Notification.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["FeedbackContainer","styled","div","FeedbackButton","button","FeedbackOptions","options","onLeaveFeedback","map","option","key","type","onClick","SectionContainer","section","SectionTitle","h2","Section","title","children","StatisticsContainer","StatisticsFeedbackParagraph","p","Statistics","good","neutral","bad","total","positivePercentage","Object","freeze","GOOD","NEUTRAL","BAD","NotificationTitle","Notification","message","AppContainer","values","Feedback","App","state","handleFeedbackUpdate","e","feedbackOption","target","textContent","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","querySelector"],"mappings":"64BAEO,IAAMA,EAAoBC,IAAOC,IAAV,KAIjBC,EAAiBF,IAAOG,OAAV,KCaZC,EAfS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,kBAACP,EAAD,KACGM,EAAQE,KAAI,SAAAC,GAAM,OACjB,kBAACN,EAAD,CAAgBO,IAAKD,EAAQE,KAAK,SAASC,QAASL,GACjDE,Q,wQCNF,IAAMI,EAAmBZ,IAAOa,QAAV,KAIhBC,EAAed,IAAOe,GAAV,KCUVC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,kBAACN,EAAD,KACE,kBAACE,EAAD,KAAeG,GACdC,I,0QCLE,IAAMC,EAAsBnB,IAAOC,IAAV,KAInBmB,EAA8BpB,IAAOqB,EAAV,KCuBzBC,EAtBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,kBAACR,EAAD,KACE,kBAACC,EAAD,cAAoCG,GACpC,kBAACH,EAAD,iBACYI,GAEZ,kBAACJ,EAAD,aAAmCK,GACnC,kBAACL,EAAD,eAAqCM,GACrC,kBAACN,EAAD,2BACsBO,EADtB,OCfWC,SAAOC,OAAO,CAC3BC,KAAM,OACNC,QAAS,UACTC,IAAK,Q,+KCDP,IAQeC,EARWjC,IAAOC,IAAV,KCURiC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,kBAAC,EAAD,KAAoBA,I,4GCHtB,IAKeC,EALMpC,IAAOC,IAAV,KCMZI,EAAUuB,OAAOS,OAAOC,GAETC,E,4MACnBC,MAAQ,CAAEjB,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCgB,qBAAuB,SAAAC,GACrB,IAAMC,EAAiBD,EAAEE,OAAOC,YAEhC,EAAKC,UAAS,SAAAN,GAAK,sBAChBG,EAAiBH,EAAMG,GAAkB,O,EAI9CI,mBAAqB,WAAO,IAAD,EACM,EAAKP,MAEpC,OAHyB,EACjBjB,KADiB,EACXC,QADW,EACFC,K,EAKzBuB,gCAAkC,WAAO,IAC/BzB,EAAS,EAAKiB,MAAdjB,KACFG,EAAQ,EAAKqB,qBAEnB,OAAIrB,EACKuB,KAAKC,MAAc,IAAP3B,EAAcG,GAG5B,G,uDAGC,IAAD,EACwByB,KAAKX,MAA5BjB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBC,EAAayB,KAAKJ,qBAClBpB,EAAqBwB,KAAKH,kCAEhC,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAS/B,MAAM,yBACb,kBAAC,EAAD,CACEZ,QAASA,EACTC,gBAAiB6C,KAAKV,wBAG1B,kBAAC,EAAD,CAASxB,MAAM,cACZM,GAAQC,GAAWC,EAClB,kBAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAcQ,QAAQ,4B,GApDDiB,a,MCLjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.d702ab8b.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FeedbackContainer = styled.div`\n  padding: 20px 0 10px;\n`;\n\nexport const FeedbackButton = styled.button`\n  display: inline-block;\n  padding: 5px 15px;\n  font-family: sans-serif;\n  font-size: 12px;\n  line-height: 1.2;\n  font-weight: 600;\n  color: #fff;\n  background-color: blue;\n  border: 2px solid transparent;\n  border-radius: 20px;\n  text-transform: uppercase;\n  cursor: pointer;\n\n  :not(:last-child) {\n    margin-right: 15px;\n  }\n\n  :hover,\n  :focus {\n    color: blue;\n    background-color: #fff;\n    border: 2px solid blue;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FeedbackContainer, FeedbackButton } from './FeedbackOptions.styled';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <FeedbackContainer>\n    {options.map(option => (\n      <FeedbackButton key={option} type=\"button\" onClick={onLeaveFeedback}>\n        {option}\n      </FeedbackButton>\n    ))}\n  </FeedbackContainer>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import styled from 'styled-components';\n\nexport const SectionContainer = styled.section`\n  padding: 10px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin: 0;\n  font-family: sans-serif;\n  font-size: 30px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SectionContainer, SectionTitle } from './Section.styled';\n\nconst Section = ({ title, children }) => (\n  <SectionContainer>\n    <SectionTitle>{title}</SectionTitle>\n    {children}\n  </SectionContainer>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.shape([]).isRequired,\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nexport const StatisticsContainer = styled.div`\n  padding: 10px 0;\n`;\n\nexport const StatisticsFeedbackParagraph = styled.p`\n  margin: 0;\n  font-family: sans-serif;\n  font-size: 18px;\n  line-height: 1.4;\n  font-weight: 400;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StatisticsContainer,\n  StatisticsFeedbackParagraph,\n} from './Statistics.styled';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <StatisticsContainer>\n    <StatisticsFeedbackParagraph>Good: {good}</StatisticsFeedbackParagraph>\n    <StatisticsFeedbackParagraph>\n      Neutral: {neutral}\n    </StatisticsFeedbackParagraph>\n    <StatisticsFeedbackParagraph>Bad: {bad}</StatisticsFeedbackParagraph>\n    <StatisticsFeedbackParagraph>Total: {total}</StatisticsFeedbackParagraph>\n    <StatisticsFeedbackParagraph>\n      Positive feedback: {positivePercentage}%\n    </StatisticsFeedbackParagraph>\n  </StatisticsContainer>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","export default Object.freeze({\n  GOOD: 'good',\n  NEUTRAL: 'neutral',\n  BAD: 'bad',\n});\n","import styled from 'styled-components';\n\nconst NotificationTitle = styled.div`\n  margin: 0;\n  font-family: sans-serif;\n  font-size: 20px;\n  line-height: 2.2;\n  font-weight: 500;\n`;\n\nexport default NotificationTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NotificationTitle from './Notification.styled';\n\nconst Notification = ({ message }) => (\n  <NotificationTitle>{message}</NotificationTitle>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from 'styled-components';\n\nconst AppContainer = styled.div`\n  width: 1140px;\n  margin: 0 auto;\n`;\n\nexport default AppContainer;\n","import React, { Component } from 'react';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Section from '../Section/Section';\nimport Statistics from '../Statistics/Statistics';\nimport Feedback from '../../utils/Feedback';\nimport Notification from '../Notification/Notification';\nimport AppContainer from './App.styled';\n\nconst options = Object.values(Feedback);\n\nexport default class App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  handleFeedbackUpdate = e => {\n    const feedbackOption = e.target.textContent;\n\n    this.setState(state => ({\n      [feedbackOption]: state[feedbackOption] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n\n    if (total) {\n      return Math.round((good * 100) / total);\n    }\n\n    return 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const total = 0 || this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <AppContainer>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleFeedbackUpdate}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {good || neutral || bad ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </AppContainer>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}